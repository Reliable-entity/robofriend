{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","planceholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","console","log","target","value","setState","searchfield","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,qDAAf,UACE,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,WACvB,gCACE,6BAAKF,IACL,4BAAIC,WCKGK,EAVE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACXC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACxC,OAAO,cAAC,EAAD,CAAyBT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAAvEM,EAAOI,GAAGT,OAC5B,OACE,8BACGM,KCOQI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKV,UAAY,MAAjB,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,aAAa,gBACbC,SAAUH,OCCHI,G,MARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,QAArE,SACGJ,EAAMK,aCwCEC,E,kDAtCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzB,EAAKC,SAAS,CAACC,YAAaN,EAAMG,OAAOC,SAdzC,EAAKG,MAAM,CACT1B,OAAQ,GACRyB,YAAa,IAJH,E,gEAQO,IAAD,OAClBE,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAAExB,OAAQ+B,S,+BAQlC,IAAD,OACAC,EAAiBC,KAAKP,MAAM1B,OAAOkC,QAAO,SAAAlC,GAC9C,OAAOA,EAAOP,KAAK0C,cAAcC,SAAS,EAAKV,MAAMD,YAAYU,kBAEnE,OAAiC,IAA7BF,KAAKP,MAAM1B,OAAOqC,OACb,oBAAIzC,UAAU,KAAd,qBAGP,sBAAKA,UAAY,KAAjB,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAc2B,KAAKf,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQgC,a,GAhCVM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.670b6b2e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className='tc bg-light-pink dib br3 pa3 ma2 grow bw2 shadow-7'>\r\n      <img alt = 'robots' src={`https://robohash.org/${id}75x75`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  const cardComponent = robots.map((user, i) => {\r\n  return <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>})\r\n  return (\r\n    <div>\r\n      {cardComponent}\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return(\r\n    <div className = 'pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        planceholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll', border:'3px solid black', height: '80vh'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state={\r\n      robots: [],\r\n      searchfield: ''  \r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users}));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    console.log(event.target.value);\r\n    this.setState({searchfield: event.target.value})\r\n    \r\n  }\r\n  render(){\r\n    const filteredRobots = this.state.robots.filter(robots =>{\r\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n    if (this.state.robots.length === 0) {\r\n      return <h1 className='f2'>Loading</h1>\r\n    } else {\r\n      return (\r\n      <div className = 'tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots}/>\r\n        </Scroll>\r\n      </div>);\r\n    }   \r\n  }\r\n} \r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}